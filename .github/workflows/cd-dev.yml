name: CD (dev env)

# 触发workflow的条件
on:
  workflow_call:
    secrets:
      TARGET_SERVERS:
        required: true
      COS_API_ID:
        required: true
      COS_API_KEY:
        required: true
      COS_API_BUCKET:
        required: true

jobs:

  # 将数组里每个服务器信息替换成其名称的base64并输出
  # 问就是Github不给传机密，所以只能传索引
  eval-base64-names:
    runs-on: ubuntu-latest
    outputs:
      matricies: ${{ steps.eval.outputs.result }}
    steps:
      - name: Eval targets base64 names
        id: eval
        uses: mikefarah/yq@master
        with:
            cmd: |-
              echo '${{ secrets.TARGET_SERVERS }}' | yq -o=json -I=0 eval 'map_values(map(.name | @base64))'
            # Reference: https://mikefarah.gitbook.io/yq/usage/convert#encode-json-simple-in-one-line\

  deploy:
    needs: eval-base64-names
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      type: dev
    strategy:
      matrix:
        target-name: ${{fromJson(needs.eval-base64-names.outputs.matricies).dev}}

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - id: sanitize_artifact_name
        uses: ./.github/actions/sanitize-name
        with:
          name: ${{ github.ref_name }}

      # 下载Flutter构建产物
      - name: 'Download Build Artifacts - ${{ github.ref_name }} - Flutter'
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.sanitize_artifact_name.outputs.sanitized_name }}-build-flutter
          path: dist/flutter_project/build/web/

      # 下载Vue构建产物
      - name: 'Download Build Artifacts - ${{ github.ref_name }} - Vue'
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.sanitize_artifact_name.outputs.sanitized_name }}-build-vue
          path: dist/vue/dist/
      
      # 获取目标服务器信息
      - name: Get target info
        id: get-target-info
        uses: mikefarah/yq@master
        with:
            cmd: |-
              echo '${{ secrets.TARGET_SERVERS }}' | yq -o=json -I=0 eval '.${{ env.type }}.[] | select(.name == ("${{ matrix.target-name }}" | @base64d))'

      # # 部署到服务器
      # - name: Incremental Deploy to ${{ fromJSON(steps.get-target-info.outputs.result).name }}
      #   uses: easingthemes/ssh-deploy@main
      #   with:
      #     SSH_PRIVATE_KEY: ::add-mask::${{ fromJSON(steps.get-target-info.outputs.result).privateKey }}
      #     REMOTE_HOST: ${{ fromJSON(steps.get-target-info.outputs.result).host }}
      #     REMOTE_PORT: ${{ fromJSON(steps.get-target-info.outputs.result).port }}
      #     REMOTE_USER: ${{ fromJSON(steps.get-target-info.outputs.result).username }}
      #     ARGS: '-avz --delete'
      #     # https://ss64.com/bash/rsync_options.html
      #     SOURCE: 'dist/'
      #     TARGET: ${{ fromJSON(steps.get-target-info.outputs.result).dstPath }} # 服务器目标路径

      # 将私钥写入文件
      - name: Write private key to file
        run: echo "${{ fromJSON(steps.get-target-info.outputs.result).privateKey }}" > ./.github/privateKey

      # 直接命令行调用rsync！
      - name: Incremental Deploy to ${{ fromJSON(steps.get-target-info.outputs.result).name }}
        run: |-
          echo "Deploying to ${{ fromJSON(steps.get-target-info.outputs.result).name }}"
          ::add-mask::PORT="${{ fromJSON(steps.get-target-info.outputs.result).port }}"
          if [ -z "$PORT" ]; then
            PORT=22
          fi
          ::add-mask::USER="${{ fromJSON(steps.get-target-info.outputs.result).username }}"
          ::add-mask::HOST="${{ fromJSON(steps.get-target-info.outputs.result).host }}"
          ::add-mask::DST_PATH="${{ fromJSON(steps.get-target-info.outputs.result).dstPath }}"
          rsync -avz --delete -e "ssh -i ./.github/privateKey -p $PORT" dist/ $USER@$HOST:$DST_PATH

  upload-cdn:
    needs: deploy
    uses: ./.github/workflows/cd-upload-cdn.yml
    secrets: inherit
    with:
      cospath: 'dev/'

  # 刷新CDN
  # refresh-eo:
  #     needs: deploy
  #     uses: ./.github/workflows/cd-refresh-eo.yml