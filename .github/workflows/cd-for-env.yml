# The workflow to execute the CD process for a existing Github Environment specified by the job input parameter.
# The workflow accesses the secrets in the Environments to get the information for the deployment.

name: CD for Environment

on:
  workflow_call:
    inputs:
      environment:
        description: "The name of the environment to deploy to"
        type: string
        required: true
        default: "dev"
    secrets:
      SSH_DEPLOY_KEY:
        required: true
      SSH_DEPLOY_INFO:
        required: true
      EO_API_SID:
        required: true
      EO_API_SKEY:
        required: true
      COS_API_ID:
        required: true
      COS_API_KEY:
        required: true
      COS_API_BUCKET:
        required: true
      PI:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - id: sanitize_artifact_name
        uses: ./.github/actions/sanitize-name
        with:
          name: ${{ github.ref_name }}

      # 解析SSH连接信息 --- username@host:port
      - id: strip-ssh-connection-info
        run: |
          INFO="${{ secrets.SSH_DEPLOY_INFO }}"
          USERNAME=$(echo "$INFO" | cut -d'@' -f1)
          HOST_PORT=$(echo "$INFO" | cut -d'@' -f2)
          HOST=$(echo "$HOST_PORT" | cut -d':' -f1)
          PORT=$(echo "$HOST_PORT" | cut -d':' -f2)

          echo "USERNAME=$USERNAME" >> $GITHUB_ENV
          echo "HOST=$HOST" >> $GITHUB_ENV
          echo "PORT=$PORT" >> $GITHUB_ENV
        shell: bash

      # 下载Flutter构建产物
      - name: "Download Build Artifacts - ${{ github.ref_name }} - Flutter"
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.sanitize_artifact_name.outputs.sanitized_name }}-build-flutter
          path: dist/flutter_project/build/web/

      # 下载Vue构建产物
      - name: "Download Build Artifacts - ${{ github.ref_name }} - Vue"
        uses: actions/download-artifact@v3
        with:
          name: ${{ steps.sanitize_artifact_name.outputs.sanitized_name }}-build-vue
          path: dist/vue/dist/

      # 部署到Env指定的服务器
      - name: Incremental Deploy
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          REMOTE_HOST: ${{ env.HOST }}
          REMOTE_PORT: ${{ env.PORT }}
          REMOTE_USER: ${{ env.USERNAME }}
          ARGS: "-avz --delete"
          # https://ss64.com/bash/rsync_options.html
          SOURCE: "dist/"
          TARGET: "/root/redstone_daily/frontend/" # 服务器目标路径

  # 上传CDN
  upload-cdn:
    needs: deploy
    uses: ./.github/workflows/cd-upload-cdn.yml
    secrets: inherit
    with:
      cospath: "dev/"

  # 刷新eo（条件：environment == 'prod'）
  refresh-eo:
    needs: deploy
    if: ${{ github.event.inputs.environment == 'prod' }}
    uses: ./.github/workflows/cd-refresh-eo.yml
